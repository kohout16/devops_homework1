name: GitHub Actions Demo
run-name: ${{ github.actor }} is testing out GitHub Actions 🚀
on: 
  push:
  workflow_dispatch:
      inputs:
        lesson:
          description: 'Select the lesson to run'
          required: true
          default: 'lesson2'
          type: choice
          options:
            - lesson2
            - lesson4
            - lesson5
            - lesson8
jobs:
  "lesson2":
    if: ${{ github.event.inputs.lesson == 'lesson2' }}
    runs-on: ubuntu-latest #self-hosted
    steps:
      - run: echo "🎉 The job was automatically triggered by a ${{ github.event_name }} event."
      - run: echo "🐧 This job is now running on a ${{ runner.os }} server hosted by GitHub!"
      - run: echo '🔎 The name of your branch is ${{ github.ref }} and your repository is ${{ github.repository }}.'
      - name: Check out repository code
        uses: actions/checkout@v4
      - run: echo '💡 The ${{ github.repository }} repository has been cloned to the runner.'
      - run: echo "🖥️ The workflow is now ready to test your code on the runner."
      - name: List files in the repository
        run: |
          ls ${{ github.workspace }}
      - run: echo "🍏 This job's status is ${{ job.status }}."
      - run: python test.py && zip balicek.zip my_calculations.py

  "lesson5":
    if: ${{ github.event.inputs.lesson == 'lesson5' }}
    #needs: build-and-test
    runs-on: ubuntu-latest
    #if: github.ref == 'refs/heads/main'
    enviroment: dev
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-central-1

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.5.0

      - name: Terraform Init
        working-directory: ./terraform
        run: terraform init

      - name: Terraform Plan
        working-directory: ./terraform
        run: terraform plan

      - name: Terraform Apply
        working-directory: ./terraform
        run: terraform apply -auto-approve

      - name: Get ECR repository URL
        id: ecr-url
        working-directory: ./terraform
        run: |
          ECR_URL=$(terraform output -raw ecr_repository_url)
          echo "ecr_url=$ECR_URL" >> $GITHUB_OUTPUT

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build and push Docker image to ECR
        run: |
          ECR_URL=${{ steps.ecr-url.outputs.ecr_url }}
          docker build -t $ECR_URL:latest .
          docker build -t $ECR_URL:${{ github.sha }} .

          echo "Pushing images to ECR..."
          docker push $ECR_URL:latest
          docker push $ECR_URL:${{ github.sha }}

          echo "✅ Images pushed successfully!"
          echo "Repository URL: $ECR_URL"

