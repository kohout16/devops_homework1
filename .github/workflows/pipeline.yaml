name: GitHub Actions Demo
run-name: ${{ github.actor }} is testing out GitHub Actions üöÄ
on: 
  push:
  workflow_dispatch:
      inputs:
        lesson:
          description: 'Select the lesson to run'
          required: true
          default: 'lesson2'
          type: choice
          options:
            - lesson2
            - lesson4
            - lesson5
            - lesson8
jobs:
  "lesson2":
    if: ${{ github.event.inputs.lesson == 'lesson2' }}
    runs-on: ubuntu-latest #self-hosted
    steps:
      - run: echo "üéâ The job was automatically triggered by a ${{ github.event_name }} event."
      - run: echo "üêß This job is now running on a ${{ runner.os }} server hosted by GitHub!"
      - run: echo 'üîé The name of your branch is ${{ github.ref }} and your repository is ${{ github.repository }}.'
      - name: Check out repository code
        uses: actions/checkout@v4
      - run: echo 'üí° The ${{ github.repository }} repository has been cloned to the runner.'
      - run: echo "üñ•Ô∏è The workflow is now ready to test your code on the runner."
      - name: List files in the repository
        run: |
          ls ${{ github.workspace }}
      - run: echo "üçè This job's status is ${{ job.status }}."
      - run: python test.py && zip balicek.zip my_calculations.py

"lesson4":
    if: ${{ github.event.inputs.lesson == 'lesson4' }}

    runs-on: ubuntu-latest
    environment: dev
    # run terraform in lesson-4/live-demo directory
    # defaults:
    #   run: cd lesson-4/live-demo
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v4.1.0
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: eu-central-1

    - name: Set up Terraform
      uses: hashicorp/setup-terraform@v3
      with: 
        terraform_version: "1.11.1"

    - name: Terraform plan and apply
      working-directory: lesson-4/live-demo
      env:
        TF_VAR_aws_access_key: ${{ secrets.AWS_ACCESS_KEY_ID }}
        TF_VAR_aws_secret_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        TF_VAR_aws_region: eu-central-1
        TF_IN_AUTOMATION: true
        TF_INPUT: false
        TF_WORKSPACE: dev
      run: |
        terraform init
        terraform plan -no-color
        terraform apply -auto-approve -no-color
        
  "lesson5":
    if: ${{ github.event.inputs.lesson == 'lesson5' }}

    runs-on: ubuntu-latest
    environment: dev
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
    - name: Build and push Docker image
      uses: docker/build-push-action@v4
      with:
        context: lesson-5
        tags: demoapp:latest

